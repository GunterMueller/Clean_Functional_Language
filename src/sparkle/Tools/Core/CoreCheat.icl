/*
** Program: Clean Prover System
** Module:  CoreCheat (.icl)
** 
** Author:  Maarten de Mol
** Created: 22 November 2000
*/

implementation module 
	CoreCheat

import
	StdEnv,
	Heap,
	CoreTypes

// -------------------------------------------------------------------------------------------------------------------------------------------------
:: CheatProver =
// -------------------------------------------------------------------------------------------------------------------------------------------------
	  CheatExpr		!CExprVarPtr
	| CheatType		!CTypeVarPtr

// -------------------------------------------------------------------------------------------------------------------------------------------------
fromExpr :: !CheatProver -> CExprVarPtr
// -------------------------------------------------------------------------------------------------------------------------------------------------
fromExpr (CheatExpr ptr)
	= ptr

// -------------------------------------------------------------------------------------------------------------------------------------------------
fromType :: !CheatProver -> CTypeVarPtr
// -------------------------------------------------------------------------------------------------------------------------------------------------
fromType (CheatType ptr)
	= ptr

// -------------------------------------------------------------------------------------------------------------------------------------------------
toProver :: !CheatCompiler -> CheatProver
// -------------------------------------------------------------------------------------------------------------------------------------------------
toProver c
	= code
		{	fill_a 0 1
			pop_a 1
		}

// -------------------------------------------------------------------------------------------------------------------------------------------------
toCompiler :: !CheatProver -> CheatCompiler
// -------------------------------------------------------------------------------------------------------------------------------------------------
toCompiler c
	= code
		{	fill_a 0 1
			pop_a 1
		}